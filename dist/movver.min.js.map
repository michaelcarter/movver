{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/movver.js"],"names":[],"mappings":"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","file":"movver.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Movver = (function() {\n\n  Movver.prototype.watchedElements = [];\n  Movver.prototype.touchStartOffsets = [];\n  Movver.prototype.touchEndOffsets = [];\n  Movver.prototype.elementTimeouts = [];\n  Movver.prototype.viewableLowerBoundary = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  Movver.prototype.MAX_TOUCH_OFFSETS = 3;\n  Movver.prototype.FOCUS_PERCENTAGE_THRESHOLD = 70;\n  Movver.prototype.DEBUG = false;\n  Movver.prototype.EVENT_TIMEOUT = 500;\n\n  function Movver(opts) {\n    if (!opts) opts = {};\n    if (opts.maxTouchOffsets) this.MAX_TOUCH_OFFSETS = opts.maxTouchOffsets;\n    if (opts.focusPercentageThreshold) this.FOCUS_PERCENTAGE_THRESHOLD = opts.focusPercentageThreshold;\n    if (opts.eventTimeout) this.EVENT_TIMEOUT = opts.eventTimeout;\n    if (!!opts.debug) this.DEBUG = true;\n    this._addListeners();\n  }\n\n  Movver.prototype.watch = function(element) {\n    if (typeof element !== \"object\") throw new Error(\"Element must be an object.\");\n    this.watchedElements.push(element);\n  }\n\n  // PRIVATE FUNCTIONS\n  // ================= //\n  Movver.prototype._arrayAverage = function(arrayOfIntegers) {\n    var sum = arrayOfIntegers.reduce(function(a, b) { return a + b });\n    return sum / arrayOfIntegers.length;\n  }\n\n  Movver.prototype._calculateFocusPercentage = function(element) {\n    var elementBoundingClientRect = element.getBoundingClientRect();\n    var elementMidPoint = (elementBoundingClientRect.top + elementBoundingClientRect.bottom) / 2\n    var result = (elementMidPoint / (this.viewableLowerBoundary/2)) * 100;\n    if (result > 100) result = 200-result;\n    return (result < 0) ? 0 : result;\n  }\n\n  Movver.prototype._findElementTimeout = function(element) {\n    for (var i = 0; i < this.elementTimeouts.length; i++) {\n      if (element === this.elementTimeouts[i].element) {\n        return this.elementTimeouts[i];\n      }\n    }\n    return null;\n  } \n\n  Movver.prototype._elementTimeoutExists = function(element) {\n    return !!this._findElementTimeout(element);\n  }\n\n  Movver.prototype._clearElementTimeout = function(element) {\n    var elementTimeout = this._findElementTimeout(element);\n    var indexOfElementTimeout = this.elementTimeouts.indexOf(elementTimeout);\n\n    if (elementTimeout) {\n      window.clearTimeout(elementTimeout.timeout);\n    }\n\n    if (indexOfElementTimeout > -1) {\n      this.elementTimeouts.splice(indexOfElementTimeout,1);\n    }\n\n    return !!elementTimeout;\n  }\n\n  // DEBUG only functions, for highlighting what's focussed on the page.\n  // =================================================================== //\n  Movver.prototype._fillRect = function(element, focusPercentage) {\n    var brightness = (255/100) * focusPercentage;\n    element.style.backgroundColor = 'rgb(0,'+Math.round(brightness)+',0)';\n  }\n\n  Movver.prototype._setVisibleBounds = function() {\n    var el = document.getElementById(\"thumbArea\");\n    el.style.top = this.viewableLowerBoundary+\"px\";\n    el.style.height = (document.documentElement.clientHeight - this.viewableLowerBoundary) + \"px\";\n  }\n\n  // Document listeners\n  // ================== //\n  Movver.prototype._onTouchStart = function(e) {\n    this.touchStartOffsets.push(e.touches[0].pageY - e.view.scrollY);\n    if (this.touchStartOffsets.length > this.MAX_TOUCH_OFFSETS) this.touchStartOffsets.shift();\n  }\n\n  Movver.prototype._onTouchEnd = function(e) {\n    this.touchEndOffsets.push(e.changedTouches[0].pageY - e.view.scrollY);\n    if (this.touchEndOffsets.length > this.MAX_TOUCH_OFFSETS) this.touchEndOffsets.shift();\n    this.viewableLowerBoundary = Math.min(Math.round(this._arrayAverage(this.touchEndOffsets)), Math.round(this._arrayAverage(this.touchStartOffsets)));\n    if (this.DEBUG) this._setVisibleBounds();\n  }\n\n  Movver.prototype._onScroll = function() {\n    var self = this;\n\n    // Trigger the event on any focussed elements.\n    this.watchedElements.forEach(function(element, index) {\n      var focusPercentage = self._calculateFocusPercentage(element);\n      var elementTimeoutExists = self._elementTimeoutExists(element);\n      if ((focusPercentage >= self.FOCUS_PERCENTAGE_THRESHOLD) && !elementTimeoutExists) {\n\n        // Push a timeout to trigger the event onto the stack\n        self.elementTimeouts.push({\n          element: element,\n          timeout: window.setTimeout(function() {\n            element.dispatchEvent(new Event('movver'));\n          }, self.EVENT_TIMEOUT)\n        });\n      } else if ((focusPercentage < self.FOCUS_PERCENTAGE_THRESHOLD) && elementTimeoutExists) {\n        self._clearElementTimeout(element);\n      }\n\n      // Show the focus of the element visually.\n      if (self.DEBUG) {\n        self._fillRect(element, focusPercentage);\n      }\n    });\n  }\n\n  Movver.prototype._addListeners = function() {\n    document.addEventListener('touchstart', this._onTouchStart.bind(this));\n    document.addEventListener('touchend', this._onTouchEnd.bind(this));\n    window.onscroll = this._onScroll.bind(this);\n  }\n\n  return Movver;\n})();"],"sourceRoot":"/source/"}